name: Update Eclipse p2 (URL + version)

on:
  schedule:
    - cron: "7 5 * * *"   # daily
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

env:
  POM_PATH: pom.xml

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find latest Eclipse SimRel and update pom.xml
        id: do_update
        shell: bash
        run: |
          set -o pipefail

          POM="${POM_PATH:-pom.xml}"
          if [[ ! -f "$POM" ]]; then
            echo "❌ Cannot find $POM"
            exit 1
          fi

          # --- Get latest SimRel (YYYY-MM) via redirect first, then fallback to HTML parse ---
          latest=""
          # Try via redirect from .../releases/latest/
          for i in 1 2 3; do
            redirected="$(curl -fsSLI -A 'Mozilla/5.0 (Actions)' -o /dev/null -w '%{url_effective}' https://download.eclipse.org/releases/latest/ 2>/dev/null || true)"
            if [[ -n "$redirected" ]]; then
              cand="$(printf '%s' "$redirected" | grep -Eo '[0-9]{4}-[0-9]{2}/?$' | tr -d '/' || true)"
              if [[ -n "$cand" ]]; then latest="$cand"; break; fi
            fi
            sleep 2
          done

          # Fallback: parse directory index if redirect didn’t work
          if [[ -z "$latest" ]]; then
            for i in 1 2 3; do
              html="$(curl -fsSL -A 'Mozilla/5.0 (Actions)' https://download.eclipse.org/releases/ 2>/dev/null || true)"
              if [[ -n "$html" ]]; then
                latest="$(printf '%s' "$html" \
                  | grep -Eo 'href="[0-9]{4}-[0-9]{2}/"' \
                  | sed -E 's/^href="([0-9]{4}-[0-9]{2})\/"$/\1/' \
                  | sort -u | sort -r | head -n1 || true)"
              fi
              [[ -n "$latest" ]] && break
              sleep 2
            done
          fi

          if [[ -z "$latest" ]]; then
            echo "⚠️  Could not determine latest Eclipse release; skipping updates."
            echo "changed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          latest_url="https://download.eclipse.org/releases/${latest}/"
          y="${latest%-*}"
          m="${latest#*-}"
          new_version="${y}.${m}.0"

          echo "Latest: $latest"
          echo "New URL: $latest_url"
          echo "New version: $new_version"

          changed=0

          # Update p2 URL everywhere
          current_url="$(grep -Eo 'https://download\.eclipse\.org/releases/[0-9]{4}-[0-9]{2}/' "$POM" 2>/dev/null | head -n1 || true)"
          if [[ "${current_url:-}" != "$latest_url" ]]; then
            esc_url="$(printf '%s' "$latest_url" | sed 's/[\/&]/\\&/g')"
            sed -i -E "s#https://download\.eclipse\.org/releases/[0-9]{4}-[0-9]{2}/#${esc_url}#g" "$POM" || true
            echo "✅ p2 URL -> $latest_url"
            changed=1
          else
            echo "ℹ️ p2 URL already up to date."
          fi

          # Replace ONLY the first <version>…</version> with the new YYYY.MM.0
          current_ver="$(grep -Eo '<version>[^<]+</version>' "$POM" 2>/dev/null | head -n1 | sed -E 's#</?version>##g' || true)"
          if [[ -z "${current_ver:-}" ]]; then
            echo "ℹ️ No <version> tag found; skipping version bump."
          elif [[ "$current_ver" != "$new_version" ]]; then
            sed -i -E "0,/<version>[^<]+<\/version>/{s//<version>${new_version}<\/version>/}" "$POM" || true
            echo "✅ Version -> $new_version (from ${current_ver})"
            changed=1
          else
            echo "ℹ️ Version already up to date."
          fi

          if [[ $changed -eq 1 ]]; then
            {
              echo "changed=true"
              echo "branch=update-eclipse-${latest}"
              echo "latest=${latest}"
              echo "new_url=${latest_url}"
              echo "new_version=${new_version}"
            } >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
            echo "ℹ️ No changes necessary."
          fi

      - name: Create Pull Request
        if: steps.do_update.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "chore: update Eclipse SimRel to ${{ steps.do_update.outputs.latest }} (p2 URL + version ${{ steps.do_update.outputs.new_version }})"
          title: "Update Eclipse SimRel to ${{ steps.do_update.outputs.latest }}"
          body: |
            - **p2 URL:** `${{ steps.do_update.outputs.new_url }}`
            - **version:** `${{ steps.do_update.outputs.new_version }}`
          branch: ${{ steps.do_update.outputs.branch }}
          delete-branch: true
          token: ${{ secrets.GITHUB_TOKEN }}
