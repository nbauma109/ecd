name: Upgrade Java 17 → 21 (with PAT, no JDK install)

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  upgrade:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (no auto-credentials)
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Install SDKMAN! (no JDK install)
        shell: bash
        run: |
          set -eo pipefail
          export SDKMAN_DIR="$HOME/.sdkman"
          export SDKMAN_CANDIDATES_API="${SDKMAN_CANDIDATES_API:-https://api.sdkman.io/2}"
          curl -s https://get.sdkman.io | bash
          source "$SDKMAN_DIR/bin/sdkman-init.sh"
          mkdir -p "$SDKMAN_DIR/etc"
          {
            echo "sdkman_auto_answer=true"
            echo "sdkman_selfupdate_enable=false"
          } >> "$SDKMAN_DIR/etc/config"
          sdk version

      - name: Resolve latest Java 21 candidates
        id: resolve
        shell: bash
        run: |
          set -eo pipefail
          export SDKMAN_DIR="$HOME/.sdkman"
          export SDKMAN_CANDIDATES_API="${SDKMAN_CANDIDATES_API:-https://api.sdkman.io/2}"
          source "$SDKMAN_DIR/bin/sdkman-init.sh"
          CAND_TEM=$(sdk list java | awk '/[[:space:]]21(\.[0-9]+)*-tem[[:space:]]/ {print $NF}' | sed 's/[^[:alnum:].-]//g' | sort -V | tail -n1)
          CAND_ORA=$(sdk list java | awk '/[[:space:]]21(\.[0-9]+)*-oracle[[:space:]]/ {print $NF}' | sed 's/[^[:alnum:].-]//g' | sort -V | tail -n1)
          if [[ -z "${CAND_TEM:-}" ]]; then
            echo "No 21-tem candidate found via SDKMAN" >&2
            exit 1
          fi
          if [[ -z "${CAND_ORA:-}" ]]; then
            CAND_ORA="$CAND_TEM"
          fi
          echo "tem=$CAND_TEM" >> "$GITHUB_OUTPUT"
          echo "oracle=$CAND_ORA" >> "$GITHUB_OUTPUT"

      - name: Update references from 17 to 21 (code + workflows + OSGi/Tycho)
        shell: bash
        env:
          JAVA21_TEM: ${{ steps.resolve.outputs.tem }}
          JAVA21_ORACLE: ${{ steps.resolve.outputs.oracle }}
        run: |
          set -euo pipefail
          shopt -s nullglob
          mapfile -d '' FILES < <(git ls-files -z '*.xml' '*.yml' '*.yaml' '*.sh' '*.properties' '*/MANIFEST.MF' '*.target' '*.tpd' '*.product' '*.bnd' 'feature.xml' 'category.xml')
          for f in "${FILES[@]}"; do
            sed -E -i \
              -e "s#(<java\.version>\s*)17(\s*</java\.version>)#\121\2#g" \
              -e "s#(<maven\.compiler\.source>\s*)17(\s*</maven\.compiler\.source>)#\121\2#g" \
              -e "s#(<maven\.compiler\.target>\s*)17(\s*</maven\.compiler\.target>)#\121\2#g" \
              -e "s#(<source>\s*)17(\s*</source>)#\121\2#g" \
              -e "s#(<target>\s*)17(\s*</target>)#\121\2#g" \
              -e "s#(<release>\s*)17(\s*</release>)#\121\2#g" \
              "$f" || true
            sed -E -i \
              -e "s#(sourceCompatibility\s*=\s*)17\b#\121#g" \
              -e "s#(targetCompatibility\s*=\s*)17\b#\121#g" \
              -e "s#(java\.toolchain\.languageVersion\s*=\s*JavaLanguageVersion\.of\()\s*17(\))#\121\2#g" \
              "$f" || true
            sed -E -i \
              -e "s#(java[_-]?version:\s*['\"]?)17(['\"]?)#\121\2#gI" \
              -e "s#(java-version:\s*\[)([^]]*?)17([^]]*?\])#\121\3#gI" \
              -e "s#(JAVA_VERSION:\s*['\"]?)17(['\"]?)#\121\2#g" \
              -e "s#(JDK_VERSION:\s*['\"]?)17(['\"]?)#\121\2#g" \
              "$f" || true
            sed -E -i \
              -e "s#(org\.eclipse\.jdt\.core\.compiler\.compliance\s*=\s*)17(\.0)?\b#\121#g" \
              -e "s#(org\.eclipse\.jdt\.core\.compiler\.source\s*=\s*)17(\.0)?\b#\121#g" \
              -e "s#(org\.eclipse\.jdt\.core\.compiler\.targetPlatform\s*=\s*)17(\.0)?\b#\121#g" \
              "$f" || true
            sed -E -i \
              -e "s#(Bundle-RequiredExecutionEnvironment:\s*)JavaSE-17\b#\1JavaSE-21#g" \
              "$f" || true
            sed -E -i \
              -e "s#(<executionEnvironment>\s*)JavaSE-17(\s*</executionEnvironment>)#\1JavaSE-21\2#g" \
              "$f" || true
            sed -E -i \
              -e "s#(\(osgi\.ee=JavaSE\)\)\(.*\(version=\)17(\))#\1\2\321\4#g" \
              "$f" || true
            sed -E -i \
              -e "s#(\(version=)17(\))#\121\2#g" \
              "$f" || true
            sed -E -i \
              -e "s#(a\.jre\.javase[[:space:]]+)17\.0\.0\b#\121.0.0#g" \
              -e "s#(id=\"a\.jre\.javase\"[[:space:]]+version=\")17\.0\.0(\")#\121.0.0\2#g" \
              "$f" || true
            sed -E -i "s#(sdk[[:space:]]+(install|use)[[:space:]]+java[[:space:]]+)17[^[:space:]]*-tem\\b#\\1${JAVA21_TEM}#g" "$f" || true
            sed -E -i "s#(sdk[[:space:]]+(install|use)[[:space:]]+java[[:space:]]+)17[^[:space:]]*-oracle\\b#\\1${JAVA21_ORACLE}#g" "$f" || true
            sed -E -i "s#(sdk[[:space:]]+(install|use)[[:space:]]+java[[:space:]]+)17(\\.[^[:space:]]+)?\\b#\\1${JAVA21_TEM}#g" "$f" || true
            sed -E -i \
              -e "s#(JAVA_VERSION=)17\\b#\\121#g" \
              -e "s#(JDK_VERSION=)17\\b#\\121#g" \
              "$f" || true
          done
          git status --porcelain || true

      - name: Create Pull Request (with PAT)
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GH_PAT }}
          commit-message: "chore: upgrade Java references from 17 to 21"
          branch: chore/java-21-upgrade
          title: "Upgrade Java 17 → 21"
          body: |
            - Met à jour les références Java 17 → 21 dans les fichiers *.xml*, *.yml*/*.yaml*, *.properties*, *.sh* et artefacts OSGi/Tycho (MANIFEST.MF, *.target, *.tpd, *.product, *.bnd, feature.xml, category.xml).
            - Aucune installation de JDK. SDKMAN est utilisé uniquement pour résoudre les dernières versions 21.
            - Remplacements dynamiques des commandes SDKMAN: Temurin=${{ steps.resolve.outputs.tem }}; Oracle=${{ steps.resolve.outputs.oracle }}.
          author: GitHub Actions <actions@github.com>
          committer: GitHub Actions <actions@github.com>
          signoff: false
